<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>
	<groupId>com.datamanager</groupId>
	<artifactId>DataService</artifactId>
	<version>V1.0.0</version>
	<packaging>jar</packaging>
	<name>DataService</name>
	<properties>
		<!-- -Denv=prod to override -->
		<env>local</env>
		<!-- -Dservice_version=V3.1 to override -->
		<service_version>V3.0</service_version>
		<!-- -Dproject.build.repository=XXXX to override -->
		<project.build.repository>shralph23/spinningMicroservice</project.build.repository>
		<!-- -Dproject.build.branch=XXXX to override -->
		<project.build.branch>master</project.build.branch>
		<!-- -Dproject.build.tag=XXXX to override -->
		<project.build.tag></project.build.tag>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.reportEncoding>UTF-8</project.build.reportEncoding>
		<project.build.jdkVersion>1.8</project.build.jdkVersion>
		<com.github.fge.version>2.2.5</com.github.fge.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<springboot.graceful.shutdown.version>1.0.0</springboot.graceful.shutdown.version>
		<swagger.version>2.9.2</swagger.version>
		<!-- START SonarScan Code Coverage Properties SureFire and Jacoco -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<jacoco.version>0.7.5.201505241946</jacoco.version>
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
		<sonar.exclusions>src/test/*</sonar.exclusions>
		<!-- END SonarScan Code Coverage Properties -->
	</properties>

	<dependencies>

		<!-- Spring Boot -->
		<!-- Spring Boot Starter Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Spring Boot Starter JDBC -->
		<!-- Exclude the tomcat jdbc to use Hikari conneciton pool -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jdbc</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Boot Configuration Processor -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Spring Boot DevTools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!-- Spring Boot Monitoring Health check -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Spring Boot Starter Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Framework -->
		<!-- Spring Framework Security Web -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<!-- Spring Framework LDAP Core -->
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
		</dependency>
		<!-- Spring Framework Security LDAP -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
		</dependency>
		<!-- Spring Framework Security Config -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<!-- Spring Framework Retry -->
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<!-- Spring Framework Aspects -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<!-- Spring Boot Starter Data JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- GITHUB JSON Schema Validator -->
		<dependency>
			<groupId>com.github.fge</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${com.github.fge.version}</version>
		</dependency>

		<!-- GSON to serialize/deserialize -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- DB2 Driver for JDBC 3.0 n& JDBC 4.0 -->
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>db2jcc4</artifactId>
			<version>10.5</version>
		</dependency>
		<!-- Commons Pool -->
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>

		<!-- Apache HTTPClient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<!-- <version>4.3.4</version> -->
		</dependency>

		<!-- Test Framework dependencies -->
		<!-- Mockito Framework -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Power Mockito Framework -->
		<dependency>
		   <groupId>org.powermock</groupId>
		   <artifactId>powermock-module-junit4</artifactId>
		   <version>2.0.0-beta.5</version>
		   <scope>test</scope>
		</dependency>
		<dependency>
		   <groupId>org.powermock</groupId>
		   <artifactId>powermock-api-mockito2</artifactId>
		   <version>2.0.0-beta.5</version>
		   <scope>test</scope>
		</dependency>
		<!-- Hamcrest FrameWork -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<!-- Springfox -->
		<!-- Springfox Swagger2 API Documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- Springfox Swagger UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<!-- Freddiemac Artifactory -->
		<!-- For Spring Boot Graceful Shutdown -->
		<dependency>
			<groupId>com.freddiemac.BA0124</groupId>
			<artifactId>springboot-graceful-shutdown</artifactId>
			<version>${springboot.graceful.shutdown.version}</version>
		</dependency>

		<!-- Mac Vault Dependencies SCF -->
		<dependency>
			<groupId>com.freddiemac.security.scf</groupId>
			<artifactId>SCF</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Optimus Logger -->
      <dependency>
         <groupId>com.freddiemac.BA0124</groupId>
         <artifactId>optimus-logger-models</artifactId>
         <version>2.4.10</version>
      </dependency>
		<dependency>
			<groupId>com.freddiemac.BA0124</groupId>
			<artifactId>OptimusLogger</artifactId>
			<version>1.24.0</version>
		</dependency>

		<!-- Jackson -To generate schema -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jsonSchema</artifactId>
		</dependency>

		<!-- Elastic APM for ELK Integration -->
		<dependency>
			<groupId>co.elastic.apm</groupId>
			<artifactId>apm-agent-attach</artifactId>
			<version>1.15.0</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>SLIDRetrievalService</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/application-*.yml</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<encoding.source>${project.build.sourceEncoding}</encoding.source>
								<encoding.reporting>${project.build.reportEncoding}</encoding.reporting>
								<java.source>${project.build.jdkVersion}</java.source>
								<java.target>${project.build.jdkVersion}</java.target>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>

		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<argLine>${jacoco.agent.ut.arg}</argLine>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.19.1</version>
						<configuration>
							<argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<execution>
								<id>prepare-it-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
									<propertyName>jacoco.agent.it.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>${sonar-jacoco-listeners.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>run-its</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<phase>verify</phase>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>